SHELL = /bin/bash
TOPLVL = "../."

MEMORY ?= 2048M
DISK_SIZE ?= 10G

build:
	sudo python $(TOPLVL)/common/image/solus-image-creator.py

boot:
	qemu-system-x86_64 -enable-kvm -m ${MEMORY}M -cdrom Solus-Daily.iso -cpu host

boot-disk:
	if [[ ! -e ./disk.img ]]; then \
		qemu-img create -f raw disk.img ${DISK_SIZE}; \
	fi; \
	qemu-system-x86_64 -drive file=disk.img,if=virtio,aio=threads,format=raw -enable-kvm -m ${MEMORY} -cdrom Solus-Daily.iso;

pull:
	git pull --rebase

help:
	@echo "boot      - Boot the ISO directly"
	@echo "boot-disk - Boot with a working disk for installation"
	@echo "build     - Build the current ISO"
	@echo "pull      - Pull/rebase latest changes"


.PHONY:
	build
